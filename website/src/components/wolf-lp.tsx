/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 scene.gltf -t -o wolf-lp.tsx 
Author: OLEKSO (https://sketchfab.com/oleksabasarab)
License: CC-BY-NC-4.0 (http://creativecommons.org/licenses/by-nc/4.0/)
Source: https://sketchfab.com/3d-models/wolf-e319f122c2474d3186b841b019fb0edd
Title: Wolf
*/

import * as THREE from 'three'
import React from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF, SkeletonUtils } from 'three-stdlib'

type ActionName = 'Take 001'

interface GLTFAction extends THREE.AnimationClip {
  name: ActionName
}

type GLTFResult = GLTF & {
  nodes: {
    Object_7: THREE.SkinnedMesh
    _rootJoint: THREE.Bone
  }
  materials: {
    ['01_-_Default']: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

export function WolfLP(props: JSX.IntrinsicElements['group']) {
  const group = React.useRef<THREE.Group>()
  const { scene, animations } = useGLTF('/wolf-lp/scene.gltf')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone) as GLTFResult
  const { actions } = useAnimations(animations, group)
  return (
    <group {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
          <group name="f1ec99d20c984c7bb13d3a90ebea3858fbx" rotation={[Math.PI / 2, 0, 0]}>
            <group name="Object_2">
              <group name="RootNode">
                <group name="Object_4">
                  <primitive object={nodes._rootJoint} />
                  <group name="Object_6" position={[0, -0.002, -0.005]} rotation={[-Math.PI / 2, 0, 0]} scale={0.01} />
                  <group name="wolf_base_mesh" position={[0, -0.002, -0.005]} rotation={[-Math.PI / 2, 0, 0.087]} scale={0.01} />
                  <group name="��������001" rotation={[-Math.PI / 2, 0, 0]} scale={0.01} />
                  <group name="������������001" rotation={[-Math.PI / 2, 0, 0]} scale={0.01} />
                  <skinnedMesh name="Object_7" geometry={nodes.Object_7.geometry} material={materials['01_-_Default']} skeleton={nodes.Object_7.skeleton} />
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/wolf-lp/scene.gltf')
